name: Format, Lint, Test

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

jobs:
  unime_frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install NPM dependencies in project root and workspaces
        run: pnpm i --frozen-lockfile

      - name: Format
        run: pnpm format:check

      - name: Lint
        run: pnpm lint

      - name: Test
        run: pnpm test

  unime_core:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Rust stable
        # TODO Set back to @stable (workaround for #224).
        # uses: dtolnay/rust-toolchain@1.77.2 fails because it does not include rustfmt.
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.77.2
          components: clippy, rustfmt

      - name: Install dependencies
        working-directory: ./unime/src-tauri
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libsoup-3.0 javascriptcoregtk-4.1 webkit2gtk-4.1

      - name: Format
        working-directory: ./unime/src-tauri
        run: cargo fmt -- --check

      - uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Build frontend
        # Otherwise linting will fail with error: The `distDir` configuration is set to `"../build"` but this path doesn't exist.
        run: pnpm i --frozen-lockfile && pnpm build
        env:
          PUBLIC_DEV_MODE_MENU_EXPANDED: false
          PUBLIC_STYLE_SAFE_AREA_INSETS: false

      - name: Lint
        working-directory: ./unime/src-tauri
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Test
        working-directory: ./unime/src-tauri
        run: cargo test

  identity_wallet:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Rust stable
        # TODO See comment above.
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.77.2
          components: clippy, rustfmt

      - name: Install dependencies
        working-directory: ./identity-wallet
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf libsoup-3.0 javascriptcoregtk-4.1 webkit2gtk-4.1

      - name: Format
        working-directory: ./identity-wallet
        run: cargo fmt -- --check

      - name: Lint
        working-directory: ./identity-wallet
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Test
        working-directory: ./identity-wallet
        run: cargo test
